version: '2.1'

services:
  mender-gui-tests-runner:
    build:
      dockerfile: Dockerfile.gui
      context: ${GUI_REPOSITORY}/tests/e2e_tests
    command: tail -f /dev/null
    environment:
      - TEST_ENVIRONMENT
    networks:
      - mender
    depends_on:
      - mender-api-gateway
      - mender-gui
      - mender-client
      - mender-deployments
      - mender-device-auth
      - mender-inventory
      - mender-useradm
      - mender-mongo
      - mender-workflows-server
      - mender-workflows-worker
      - mender-create-artifact-worker
      - minio
    volumes:
      - ${GUI_REPOSITORY}/screenshots:/e2e/test-results
      # - ${GUI_REPOSITORY}/tests/e2e_tests/snapshots:/e2e/snapshots
      - ${GUI_REPOSITORY}/videos:/e2e/videos
      - ${GUI_REPOSITORY}/logs:/root/.npm/_logs
      - ${GUI_REPOSITORY}/junit:/e2e/junit

  mender-client:
    image: mendersoftware/mender-client-docker-addons:master
    volumes:
      - ${GUI_REPOSITORY}/tests/e2e_tests/dockerClient/artifact_info:/etc/mender/artifact_info
      - ${GUI_REPOSITORY}/tests/e2e_tests/dockerClient/device_type:/var/lib/mender/device_type
      - ${GUI_REPOSITORY}/tests/e2e_tests/dockerClient/mender.json:/etc/mender/mender.conf
      - ${GUI_REPOSITORY}/tests/e2e_tests/dockerClient/mender-connect.json:/etc/mender/mender-connect.conf

  ##
  ## to execute or edit the tests locally:
  ## use playwright locally using `npm install` in the e2e_tests directory and run `npm run test`
  ##

  mender-gui:
    image: mendersoftware/gui:pr
    environment:
      - GATEWAY_IP=docker.mender.io
      - DISABLE_ONBOARDING=true
