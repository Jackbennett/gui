image: docker:git

stages:
  - test
  - build
  - e2e-test
  - publish

variables:
  DOCKER_REPOSITORY: mendersoftware/gui

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:lint:
  stage: test
  image: node:12.14.0-alpine
  script:
    - npm ci
    - npm run lint
  except:
    - master

test:acceptance:
  image: tiangolo/docker-with-compose
  dependencies:
    - build:docker
  services:
    - docker:18-dind
  stage: e2e-test
  before_script:
    - export DOCKER_TAG=${CI_COMMIT_REF_SLUG:-master}
    - export SERVICE_IMAGE=${DOCKER_REPOSITORY}:${DOCKER_TAG}
  script:
    - docker load -i image.tar
    - docker tag $SERVICE_IMAGE $DOCKER_REPOSITORY:pr
    - apk add --no-cache git bash
    - git clone --single-branch https://github.com/mendersoftware/integration.git
    - GUI_REPOSITORY=$(pwd) INTEGRATION_PATH=$(pwd)/integration ./tests/e2e_tests/run
    - docker rmi $DOCKER_REPOSITORY:pr
  artifacts:
    expire_in: 2w
    paths:
      - tests/e2e_tests/cypress/screenshots
  tags:
    - mender-qa-slave

test:unit:
  image: node:12.14.0-alpine
  stage: test
  script:
    - npm install
    - npm run test
  artifacts:
    expire_in: 2w
    paths:
      - coverage

publish:tests:
  image: node:12.14.0-alpine
  dependencies:
    - test:unit
  stage: publish
  before_script:
    - npm install -g codecov
  script:
    - codecov

publish:disclaimer:
  stage: publish
  services:
    - docker:19.03.5-dind
  script:
    - docker build -f Dockerfile.disclaimer -t disclaimer .
    - docker run --rm --entrypoint "/bin/sh" -v $(pwd):/extract disclaimer -c "cp disclaimer.txt /extract/"
    - docker image rm disclaimer
  artifacts:
    expire_in: 2w
    paths:
      - disclaimer.txt
  only:
    - /^(master|staging|[0-9]+\.[0-9]+\.x)$/
